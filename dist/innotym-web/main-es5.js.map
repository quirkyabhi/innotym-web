{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/footer/footer.component.ts","webpack:///src/app/component/footer/footer.component.html","webpack:///src/app/component/header/header.component.ts","webpack:///src/app/component/header/header.component.html","webpack:///src/app/component/login/login.component.ts","webpack:///src/app/component/login/login.component.html","webpack:///src/app/component/user/user.component.ts","webpack:///src/app/component/user/user.component.html","webpack:///src/app/component/user/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FooterComponent","HeaderComponent","LoginComponent","fb","createLoginForm","createSignupForm","signupForm","group","name","required","email","password","amount","loginForm","lemail","lpassword","alert","login","signup","UserComponent","_userService","dataSource","displayedColumns","getUserList","getUsers","subscribe","res","userList","console","log","UserService","http","get","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './component/user/user.component';\nimport { LoginComponent } from './component/login/login.component';\n\n\nconst routes: Routes = [\n{path:'', redirectTo:'/login',pathMatch:'full'},\n{path:'user', component:UserComponent},\n{path:'login', component:LoginComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'innotym-web';\n}\n","<!-- <section>\n  <div class=\"example-label\">Raised</div>\n  <div class=\"example-button-row\">\n    <button mat-raised-button>Basic</button>\n    <button mat-raised-button color=\"primary\">Primary</button>\n    <button mat-raised-button color=\"accent\">Accent</button>\n    <button mat-raised-button color=\"warn\">Warn</button>\n    <button mat-raised-button disabled>Disabled</button>\n    <a mat-raised-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n  </div>\n</section> -->\n<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport { HeaderComponent } from './component/header/header.component';\nimport { FooterComponent } from './component/footer/footer.component';\nimport { UserComponent } from './component/user/user.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport {MatTableModule} from '@angular/material/table';\nimport { LoginComponent } from './component/login/login.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    UserComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatTableModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-light bg-light\">\n    <a class=\"navbar-brand\">Navbar</a>\n    <form class=\"form-inline\">\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n      <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n    </form>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  signupForm: FormGroup;\n  loginForm: FormGroup;\n\n\n  constructor(private fb:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.createLoginForm()\n    this.createSignupForm()\n  }\n  createSignupForm(){\n    this.signupForm= this.fb.group({\n      name : ['',Validators.required],\n      email : ['',Validators.required],\n      password : ['',Validators.required],\n      amount : ['',Validators.required],\n\n    })\n    \n  }\n  createLoginForm(){\n    this.loginForm= this.fb.group({\n      \n      lemail : ['',Validators.required],\n      lpassword : ['',Validators.required],\n      \n\n    })\n    \n  }\n  signup(){\n    alert(\"sigup called\")\n  }\n  login(){\n    alert(\"sigup called\")\n  }\n\n}\n","<div class=\"container\">\n<div class=\" col-md-4 offset-4\">\n<mat-tab-group>\n    <mat-tab label=\"Login\"> \n        <form  class=\" form-container\" (ngSubmit)=\"login()\" novalidate [formGroup]=\"loginForm\">\n            <mat-form-field>\n                <input matInput placeholder=\"Email\" type=\"email\" formControlName=\"lname\">\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\" formControlName=\"lpassword\">\n            </mat-form-field>\n            <div>\n                <button mat-raised-button type=\"submit\" color=\"primary\">Login</button>\n                <button class=\"right\" mat-raised-button right type=\"reset\" color=\"deafault\">Cancel</button>\n            </div>\n        </form>\n\n    </mat-tab>\n    <mat-tab label=\"Signup\"> \n        <form  class=\" form-container \" (ngSubmit)=\"signup()\" novalidate [formGroup]=\"signupForm\">\n            <mat-form-field class=\"form-width\">\n                <input matInput placeholder=\"Name\" type=\"text\" formControlName=\"name\">\n            </mat-form-field>\n            <mat-form-field class=\"form-width\">\n                <input matInput placeholder=\"Email\" type=\"email\" formControlName=\"email\">\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\" formControlName=\"password\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Amount\" type=\"number\" formControlName=\"amount\">\n            </mat-form-field>\n            <!-- <mat-form-field> -->\n                <mat-checkbox>Agree to terms and conditions</mat-checkbox>\n            <!-- </mat-form-field> -->\n            <div>\n                <button mat-raised-button type=\"submit\" color=\"primary\">Sign up</button>\n                <button class=\"right\" mat-raised-button type=\"reset\" color=\"deafault\">Cancel</button>\n            </div>\n        </form>\n\n    </mat-tab>\n    <!-- <mat-tab label=\"Third\"> Content 3 </mat-tab> -->\n</mat-tab-group>\n</div>\n</div>  \n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from \"./user.service\";\nimport { User } from \"./user\";\n\n\n// export interface PeriodicElement {\n//   name: string;\n//   position: number;\n//   weight: number;\n//   symbol: string;\n\n//   // No:Number;\n//   // Name: String;\n//   // Age:Number;\n//   // Salary:Number; \n//   // Role: String;\n//   // Gender: String;\n// }\n\n// const ELEMENT_DATA: PeriodicElement[] = [\n//   {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n//   {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n//   {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n//   {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n//   {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n//   {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n//   {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n//   {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n//   {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n//   {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n// ];\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n  userList:User[];\n  dataSource=[];\n  constructor(private _userService: UserService) { }\n\n  ngOnInit(): void {\n  this.getUserList();\n  }\n  getUserList(){\n    this._userService.getUsers().subscribe(res=>{\n      this.userList=res;\n      console.log(this.userList)\n      this.dataSource= this.userList;\n    })\n  }\n  // columns = [\"No\",\"Name\",\"Age\", \"Salary\", \"Role\", \"Gender\"];\n  displayedColumns: string[] =[\"_id\",\"no\",\"name\",\"age\",\"salary\",\"role\",\"gender\"];\n  // displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n   \n\n}\n","<p>user works!</p>\n<!-- <table mat-table [dataSource]=\"\">\n    \n  </table> -->\n  <!-- <table id=\"users\">\n  <tr>\n    <th *ngFor=\"let col of columns\">\n      {{col}}\n    </th>\n  </tr>\n  <tr *ngFor=\"let user of userList\">\n    <td *ngFor=\"let col of index\">\n      {{user[col]}}\n    </td>\n  </tr>\n</table> -->\n<div class=\"container\">\n    <div class=\" col-md-8 offset-md-2\">\n        <table  mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!--- Note that these columns can be defined in any order.\n                  The actual rendered columns are set as a property on the row definition\" -->\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"_id\">\n              <th mat-header-cell *matHeaderCellDef>ID</th>\n              <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"no\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.no}} </td>\n            </ng-container>\n          \n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n            </ng-container>\n          \n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"age\">\n              <th mat-header-cell *matHeaderCellDef> Age </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.age}} </td>\n            </ng-container>\n        \n            <ng-container matColumnDef=\"salary\">\n                <th mat-header-cell *matHeaderCellDef> Salary </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.salary}} </td>\n              </ng-container>\n        \n              <ng-container matColumnDef=\"role\">\n                <th mat-header-cell *matHeaderCellDef> Role </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.role}} </td>\n              </ng-container>\n          \n              <ng-container matColumnDef=\"gender\">\n                <th mat-header-cell *matHeaderCellDef> Gender </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.gender}} </td>\n              </ng-container>\n        \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </table>\n    </div>\n</div>\n\n\n  ","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from \"./user\";\nimport {HttpClient} from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getUsers():Observable<User[]>{\n    return this.http.get<User[]>('http://localhost:3000/api/users')\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}